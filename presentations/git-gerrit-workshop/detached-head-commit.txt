Detached HEAD - Committing Changes
----------------------------------

* it is possible to commit changes even when HEAD is detached
* however, no branch will be updated
* `HEAD` is updated - and stays detached

[[graph-left0]]
--
[graphviz]
----
digraph {
  node [style=bold, shape=circle, color="#385d8a", fontname=arial, fontsize=18]
	edge [style=bold, color="#385d8a", arrowhead=none]

  F -> E
  E -> B [weight=0]
  D -> C -> B -> A

	edge [arrowhead=normal]
	node [shape=box, style=filled, fillcolor=lightgrey, color=black]
	HEAD [fillcolor="#555555", fontcolor=white]
  "origin/release1.0" [fillcolor=lightskyblue]
  "origin/master" [fillcolor=lightskyblue]
  HEAD

  HEAD -> F
  master -> D
  "origin/release1.0" -> F
  "origin/master" -> D

  { rank=same; F; D; master; "origin/release1.0" }
  { rank=same; E; C }
  { ranke=same; "origin/master"; HEAD }

  D -> F [style=invis]
  C -> E [style=invis]
}
----
--

[[graph-right]]
--
[graphviz]
----
digraph {
  node [style=bold, shape=circle, color="#385d8a", fontname=arial, fontsize=18]
	edge [style=bold, color="#385d8a", arrowhead=none]
  G [style=filled, fillcolor=coral1, color=red]

  G -> F -> E
  E -> B [weight=0]
  D -> C -> B -> A

	edge [arrowhead=normal]
	node [shape=box, style=filled, fillcolor=lightgrey, color=black]
	HEAD [fillcolor="#555555", fontcolor=white]
  "origin/release1.0" [fillcolor=lightskyblue]
  "origin/master" [fillcolor=lightskyblue]
  HEAD [color=red, fillcolor=red]

  HEAD -> G [color=red]
  master -> D
  "origin/release1.0" -> F
  "origin/master" -> D

  { rank=same; F; D; master; "origin/release1.0" }
  { rank=same; E; C }

  D -> F [style=invis]
  C -> E [style=invis]
}
----
--
